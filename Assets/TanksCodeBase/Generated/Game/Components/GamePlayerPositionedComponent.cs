//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TanksCodeBase.PlayerPositionedComponent playerPositioned { get { return (TanksCodeBase.PlayerPositionedComponent)GetComponent(GameComponentsLookup.PlayerPositioned); } }
    public bool hasPlayerPositioned { get { return HasComponent(GameComponentsLookup.PlayerPositioned); } }

    public void AddPlayerPositioned(bool newIsPositioned) {
        var index = GameComponentsLookup.PlayerPositioned;
        var component = (TanksCodeBase.PlayerPositionedComponent)CreateComponent(index, typeof(TanksCodeBase.PlayerPositionedComponent));
        component.isPositioned = newIsPositioned;
        AddComponent(index, component);
    }

    public void ReplacePlayerPositioned(bool newIsPositioned) {
        var index = GameComponentsLookup.PlayerPositioned;
        var component = (TanksCodeBase.PlayerPositionedComponent)CreateComponent(index, typeof(TanksCodeBase.PlayerPositionedComponent));
        component.isPositioned = newIsPositioned;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerPositioned() {
        RemoveComponent(GameComponentsLookup.PlayerPositioned);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerPositioned;

    public static Entitas.IMatcher<GameEntity> PlayerPositioned {
        get {
            if (_matcherPlayerPositioned == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerPositioned);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerPositioned = matcher;
            }

            return _matcherPlayerPositioned;
        }
    }
}
