//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TanksCodeBase.DirectionImpactComponent directionImpact { get { return (TanksCodeBase.DirectionImpactComponent)GetComponent(GameComponentsLookup.DirectionImpact); } }
    public bool hasDirectionImpact { get { return HasComponent(GameComponentsLookup.DirectionImpact); } }

    public void AddDirectionImpact(int newDamage) {
        var index = GameComponentsLookup.DirectionImpact;
        var component = (TanksCodeBase.DirectionImpactComponent)CreateComponent(index, typeof(TanksCodeBase.DirectionImpactComponent));
        component.damage = newDamage;
        AddComponent(index, component);
    }

    public void ReplaceDirectionImpact(int newDamage) {
        var index = GameComponentsLookup.DirectionImpact;
        var component = (TanksCodeBase.DirectionImpactComponent)CreateComponent(index, typeof(TanksCodeBase.DirectionImpactComponent));
        component.damage = newDamage;
        ReplaceComponent(index, component);
    }

    public void RemoveDirectionImpact() {
        RemoveComponent(GameComponentsLookup.DirectionImpact);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDirectionImpact;

    public static Entitas.IMatcher<GameEntity> DirectionImpact {
        get {
            if (_matcherDirectionImpact == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DirectionImpact);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDirectionImpact = matcher;
            }

            return _matcherDirectionImpact;
        }
    }
}
